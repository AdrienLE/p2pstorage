v0.12.00 (WIP)
--------------
*

v0.11.00
--------
* Moved chunk stores to private.
* Removed chunk action authority interface and mock implementation.
* CMake changes to bring OSX up to scratch with other OS.
* AsioService class proxy round boost io_service.
* Test for validate keys.
* Added checks for null pointers in RSA functions.
* Modified dashboard script to include maidsafe-private.
* Added nullptr test.
* Added check for compiler support of required C++11 features.
* Combined encryption if required, otherwise use pure RSA, allowing chained blocks if required by programmer.

v0.10.05
--------
* Replaced ChunkValidation class with ChunkActionAuthority class.
* Removed ChunkActionAuthority from chunkstores.
* Changed ChunkStore methods to receive a ValidationData struct in place of Identity.
* Added public_key_id parameter to many ChunkStore methods.
* Refactored Modify tests for chunkstores
* Removed NonHashable test from ChunkStores as no longer appropriate.
* Added check for compiler support of required C++11 features.
* Removed combined Encrypt methods
* Encrypt/Decrypt uses combined encryption if required, otherwise uses pure RSA.
* Made string Encoding and Decoding methods threadsafe.
* Added function to compare private keys, amended function to compare public keys, and added test for both.
* Added level parameter to ValidateKey methods.
* Added test for validate keys
* Added a helper class for using asio io_service.
* Added a handler for Protobuf logging.
* Improved logging for CreateTestPath deletion.
* Updated cpplint.py script.
* Removed requirement for python version < 3.0 in CMake script.
* Removed Python version from cpplint.py and re-added Doxygen comment exceptions.
* Updated CMake clone script.
* Updated dashboard script.
* Included the date_time library from boost
* Upgraded QT requirement to v4.8
* Updated CMake utils to exclude pb.h files from header version checks.
* Removed log.h from rsa.h
* Added checks for null pointers in RSA functions.
* Updated the serialisation methods of Public and Private Keys.
* Clear strings and return empty strings for uninitialised keys in Encode methods
* Fixed unhandled exception in Serialise test of RSA.
* Fixed CreateTestPath to handle destruction after main has exited.

v0.10.04
--------
* Added CMake functions for use in other projects.
* Ensure random string is over 16 when testing for truncate
* Added CombinedEncrypt and Decrypt methods for encrypting large strings.
* Added missing try catch block to Encrypt.
* Added typedefs for RSA functors.
* Added try catch blocks to crypo key en/decoding.
* Added namespace alias for rsa in rsa.h
* Moved rsa key pair generator to common from passport
* Removed breakpad support on OSX
* Added boost serialize method to PublicKey and PrivateKey.
* Minor update to CleanupTest output.
* Added delete source_file option to Modify Func
* Removed reference-counting as a ChunkStore option.
* Added per-project logging severity levels.
* Added debug method Base32Substr to utils.cc
* Added Check for hashable Chunks in Modify and Included Modifications
* Added Modify Operation to ChunkStores
* Added chunk version interfaces

v0.10.03
--------
* Significant work and testing of BufferedChunkStore.
* Re-implemented overloaded Size() in derived ChunkStore classes.
* Added logging to MemoryChunkStore.
* Replaced X917RNG with RandomPool.
* Added HexSubstr to utils.
* Updated clone script to include MaidSafe-Transport and MaidSafe-Breakpad.
* Added support for OpenMP.
* Increased min Boost version to 1.47.
* Disabled C4351 warning for MSVC.


v0.10.02
--------
* Added securifier and tests.
* Improved performance of crypto::XOR function.
* Added MaidSafe-Transport logging.
* Added reference_counting for file chunk store.
* Implemented BufferedChunkStore for coupling file and memory chunk stores.
* Added Breakpad callBack function handlers.
* Now running dashboard script for LIFSTUFF & LIFESTUFF_GUI.
* Added CMake generator handling to clone script.


v0.10.01
--------
* Added Google Breakpad client files to third_party_libs.
* Added extra default library search dirs for Linux.
* Added openmp flags and GDB flags to standard flags for UNIX.
* Updated CMake clone script for better Common detection handling.
* Updated CMake clone script to checkout to "next" branch.
* Improved MemCheck handling.  Added a valgrind suppressions file.
* Obtain git branch name in DashBoard script.
* Added weekly dashboard test and added parameter for memory check options.
* Moved CMake utility functions to separate file.
* Old protobuf .pb.cc and .pb.h files are now automatically removed from the
  source tree during the CMake configure stage.
* Removed unnecessary MSVC compiler flags.
* Increased compiler warning levels.
* Require Python version below 3 for style checking.

v0.10.00
--------
* Dashboard script now more resilient to failures in projects being tested.
* Changed dashboard script to disable coverage and increase timeouts when
  running memory check.
* Added utility methods for conversion from bytes into SI units.
* Added GetMaidSafeVersion utility method.
* Fixed find_boost module as per patch supplied by Marenz.
* Fixed memory leak in CleanupTest.
* Upgraded cryptopp to match svn rev 529.
* Added ability to set environment variable COVERAGE=ON in Linux to force
  Experimental builds to run coverage.
